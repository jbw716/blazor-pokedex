@page "/fetchdata"
@inject HttpClient Http
@inject IJSRuntime js

<h1>Weather forecast</h1>

<p>This component demonstrates fetching data from the server.</p>

@if (forecasts == null)
{
    <p><em>Loading...</em></p>
}
else
{
    <div id="weather-chart"></div>
    <table class="table">
        <thead>
            <tr>
                <th>Date</th>
                <th>Temp. (C)</th>
                <th>Temp. (F)</th>
                <th>Summary</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var forecast in forecasts)
            {
                <tr>
                    <td>@forecast.Date.ToShortDateString()</td>
                    <td>@forecast.TemperatureC</td>
                    <td>@forecast.TemperatureF</td>
                    <td>@forecast.Summary</td>
                </tr>
            }
        </tbody>
    </table>
}

@code {
    private WeatherForecast[] forecasts;

    protected override async Task OnInitializedAsync()
    {
        forecasts = await Http.GetFromJsonAsync<WeatherForecast[]>("sample-data/weather.json");

        await js.InvokeVoidAsync("log", forecasts.ToArray());

        @*foreach(WeatherForecast forecast in forecasts)
        {
            await js.InvokeVoidAsync("log", forecast);
        }*@

        @*Chart chart = new Chart
        {
            Type = "LineChart",
            Data = new object[][]
        {
                new object[] {"Mushrooms", 3 },
                new object[] {"Onions", 1 },
                new object[] {"Olives", 1},
                new object[] {"Zucchini", 1},
                new object[] {"Pepperoni", 2}
            },
            ElementId = "my_cool_chart",
            Axes = new string[][] { new string[] { "string", "Day" }, new string[] { "number", "Temperature" } }
        };

        await JSRuntime.InvokeVoidAsync("chart.drawChart", chart);*@
    }

    public class WeatherForecast
    {
        public DateTime Date { get; set; }

        public int TemperatureC { get; set; }

        public string Summary { get; set; }

        public int TemperatureF => 32 + (int)(TemperatureC / 0.5556);
    }
}
